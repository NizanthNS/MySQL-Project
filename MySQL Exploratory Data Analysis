Select * from layoffs_2


Select MAX(total_laid_off)
from layoffs_2;


Select MAX(percentage_laid_off)
from layoffs_2;


Select MAX(total_laid_off), MAX(percentage_laid_off)
from layoffs_2;


Select *
from layoffs_2
Where percentage_laid_off = 1;


Select *
from layoffs_2
Where percentage_laid_off = 1;


Select *
from layoffs_2
Where percentage_laid_off = 1
order by total_laid_off DESC;


Select *
from layoffs_2
Where percentage_laid_off = 1
order by funds_raised_millions DESC;


Select company, SUM(total_laid_off)
from layoffs_2
group by company
order by 2 desc;


Select MIN(Date)
From layoffs_2;


Select MAX(Date)
From layoffs_2;


Select MIN(Date), MAX(Date)
From layoffs_2;


Select industry, SUM(total_laid_off)
from layoffs_2
group by industry
order by 2 desc;


Select country, SUM(total_laid_off)
from layoffs_2
group by country
order by 2 desc;


Select date, SUM(total_laid_off)
from layoffs_2
group by date
order by 1 desc;


Select YEAR(date), SUM(total_laid_off)
from layoffs_2
group by YEAR(date)
order by 1 desc;


Select YEAR(date), SUM(total_laid_off) -- 2022 has lots of layoffs
from layoffs_2
group by YEAR(date)
order by 2 desc;


Select stage, SUM(total_laid_off)
from layoffs_2
group by stage
order by 1 desc;


Select stage, SUM(total_laid_off)
from layoffs_2
group by stage
order by 2 desc;


Select company, SUM(percentage_laid_off)
from layoffs_2
group by company
order by 2 desc;


Select company, avg(percentage_laid_off)
from layoffs_2
group by company
order by 2 desc;


Select substring(date,6,2) AS MONTH
from layoffs_2

-- date → the column extracting text from.
-- 6 → the starting position (counting from 1).
-- 2 → the number of characters to extract.

Select SUBSTRING(date,1,7) AS MONTH, SUM(total_laid_off)
from layoffs_2
Where SUBSTRING(date,1,7) IS NOT NULL
group by MONTH
Order by 1 ASC;


With Roll_Total AS
(
Select SUBSTRING(date,1,7) AS MONTH, SUM(total_laid_off) AS Total_off
from layoffs_2
Where SUBSTRING(date,1,7) IS NOT NULL
group by MONTH
Order by 1 ASC
)
Select MONTH, SUM(Total_off) Over(Order BY MONTH) AS Roll_Total
From Roll_Total;

-- Progression of layoffs

With Roll_Total AS
(
Select SUBSTRING(date,1,7) AS MONTH, SUM(total_laid_off) AS Total_off
from layoffs_2
Where SUBSTRING(date,1,7) IS NOT NULL
group by MONTH
Order by 1 ASC
)
Select MONTH, Total_off,
SUM(Total_off) Over(Order BY MONTH) AS Roll_Total
From Roll_Total;


Select company, Year(date), SUM(total_laid_off)
from layoffs_2
group by company, Year(date)
order by company asc;


Select company, Year(date), SUM(total_laid_off)
from layoffs_2
group by company, Year(date)
order by 3 Desc;


With Company_Year (company, years, total_laid_off) AS
(
Select company, Year(date), SUM(total_laid_off)
From layoffs_2
Group by company, Year(date)
)
Select * from Company_Year;


With Company_Year (company, years, total_laid_off) AS
(
Select company, Year(date), SUM(total_laid_off)
From layoffs_2
Group by company, Year(date)
)
Select *, Dense_rank() Over(Partition by years Order by total_laid_off Desc) As Highest_Per_Year
from Company_Year;


Select company, Year(date), SUM(total_laid_off)
From layoffs_2
Group by company, Year(date)
)
Select *, Dense_rank() Over(Partition by years Order by total_laid_off Desc) As Highest_Per_Year
from Company_Year
Where Years IS NOT NULL;


With Company_Year (company, years, total_laid_off) AS
(
Select company, Year(date), SUM(total_laid_off)
From layoffs_2
Group by company, Year(date)
)
Select *, Dense_rank() 
Over(Partition by years Order by total_laid_off Desc) 
As Highest_Per_Year
from Company_Year
Where Years IS NOT NULL
Order by Highest_Per_Year ASC;


With Company_Year (company, years, total_laid_off) AS
(
Select company, Year(date), SUM(total_laid_off)
From layoffs_2
Group by company, Year(date)
), Company_Year_Rank AS
(Select *, Dense_rank() 
Over(Partition by years Order by total_laid_off Desc) 
As Highest_Per_Year
from Company_Year
Where Years IS NOT NULL
)
Select * from Company_Year_Rank;


With Company_Year (company, years, total_laid_off) AS  -- CTE
(
Select company, Year(date), SUM(total_laid_off)
From layoffs_2
Group by company, Year(date)
), Company_Year_Rank AS                                -- CTE
(Select *, Dense_rank() 
Over(Partition by years Order by total_laid_off Desc) 
As Highest_Per_Year
from Company_Year
Where Years IS NOT NULL
)
Select * from Company_Year_Rank
Where Highest_Per_Year <=5;
